<?php
namespace Home\Controller;
use Think\Exception;

class ProductController extends IndexController{
    protected $store;

    public function index() {
        parent::index(); // TODO: Change the autogenerated stub
    }

    public function init() {
        parent::init(); // TODO: Change the autogenerated stub
        $this->store = self::findStore(I("session.mer_user"));
    }

    // 产品首页
    public function home()
    {
        $this->init();
        try{
            $result = self::getProductInfo($this->store['id']);
        }catch (Exception $e){
            $result = [];
        }
        $this->assign([
            'addUrl' => U('Product/add'),
            'resultArr' => $result,
            'editUrl' => U("edit"),
            'delUrl'  => U("del")
        ]);
        $this->display("Index/product");
    }

    // 编辑产品
    public function edit(){
        $this->init();

        $id = I('get.id');
        try {
            $info = self::getProduct($id);
        }catch (Exception $e) {
            $info = null;
        }

        $this->assign([
            'info' => $info,
            'saveUrl' => U("update")
        ]);
        $this->display('Index/product-info');
    }

    // 更新产品
    public function update() {
        $data = array_filter(I("post.data"));

        try{
            $inDB = self::setProduct($data["id"], $data);
        }catch (Exception $e) {
            $this->ajaxReturn([
                'state' => false,
                'msg' => '更新出错'
            ]);
        }

        $this->ajaxReturn([
            'state' => true,
            'msg' => '更新成功'
        ]);
    }

    // 添加产品
    public function add() {
        $this->init();
        $data = $_POST['data'];

        $inDB = M("product_hotel")->add([
            'name'=> $data['name'],
            'store_id' => $this->store['id']
        ]);
        if ($inDB) {
            $this->ajaxReturn([
                'state' => true,
                'msg' => '添加成功',
            ]);
        }
        else{
            $this->ajaxReturn([
                'state' => false,
                'msg' => '添加失败',
            ]);
        }
    }

    // 删除产品
    public function del() {
        $id = I("get.id");
        try{
            self::delProduct($id);
        }catch (Exception $e) {
            $this->ajaxReturn([
                'state' => false,
                'msg'   => '删除失败'
            ]);
        }

        $this->ajaxReturn([
            'state' => true,
            'msg'   => '删除成功'
        ]);
    }
}